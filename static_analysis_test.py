import paramiko
import json
from pprint import pprint

REMNUX_SERVER = '192.168.239.137'
MALWARE_DIRECTORY = '/home/remnux/Downloads/'
REMNUX_USER = 'remnux'
REMNUX_PASSWORD = 'malware'

# TODO: Create code to send file locally to remnux for analysis
# TODO: Create classes for each of the analysis types (exe, office docs, pdfs, etc)
# TODO: Create a helper class that has things like 'run_command' and others that will be useful

def _run_command(command, server, username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(server, username=username, password=password)
    ssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command(command)

    print("SSH successful. Closing connection")
    ssh_stdout = ssh_stdout.readlines()
    # ssh_stdin=ssh_stdin.readlines()
    ssh_stderr = ssh_stderr.readlines()
    ssh.close()
    print ("Connection closed.")
    return "".join(ssh_stdout), "".join(ssh_stderr)


def _analyse_exe(filename, analysis_type):
    exe_analysis ={
        "EXE_STRINGS": f'pedump {MALWARE_DIRECTORY}{filename} -s',
        "EXE_PACKER": f'pedump {MALWARE_DIRECTORY}{filename} -P | cut -d ":" -f2'.lstrip(),
        "EXE_MANALYZE": f'manalyze --pe {MALWARE_DIRECTORY}{filename} -o json -d all --hashes'
    }

    cmd_to_execute = exe_analysis[analysis_type]
    std_out, std_err = _run_command(cmd_to_execute, REMNUX_SERVER, REMNUX_USER, REMNUX_PASSWORD)
    return std_out, std_err


def get_exe_strings(filename):
    std_out, std_err = _analyse_exe(filename, 'EXE_STRINGS')
    return std_out, std_err

def get_exe_packer(filename):
    std_out, std_err = _analyse_exe(filename, 'EXE_PACKER')
    return std_out, std_err

def get_exe_manalyze(filename):
    std_out, std_err = _analyse_exe(filename, 'EXE_MANALYZE')
    return std_out, std_err


# std_out, std_err = _analyse_exe(exe_file_name, 'EXE_MANALYZE')

# TODO: for filenames will need to ensure that the filenames are the hash of the file (for manual - zeek does this already)
exe_file_name = '374ef83de2b254c4970b830bb93a1dd79955945d24b824a0b35636e14355fe05.exe'

manalyze_json = json.loads(get_exe_manalyze(exe_file_name)[0])
pprint(manalyze_json[MALWARE_DIRECTORY+exe_file_name])