import pymongo

myclient = pymongo.MongoClient("mongodb://localhost:27017/")

mydb = myclient["mydatabase"]
print(myclient.list_database_names())

dblist = myclient.list_database_names()
if "mydatabase" in dblist:
    print("The database exists.")

mycol = mydb["test_collection"]

collist = mydb.list_collection_names()
if "test_collection" in collist:
    print("The collection exists.")

mydict = {"name": "John", "address": "Highway 37"}

x = mycol.insert_one(mydict)

print(mydb.list_collection_names())

mylist = [
    {"_id": 1, "name": "John", "address": "Highway 37"},
    {"_id": 2, "name": "Peter", "address": "Lowstreet 27"},
    {"_id": 3, "name": "Amy", "address": "Apple st 652"},
    {"_id": 4, "name": "Hannah", "address": "Mountain 21"},
    {"_id": 5, "name": "Michael", "address": "Valley 345"},
    {"_id": 6, "name": "Sandy", "address": "Ocean blvd 2"},
    {"_id": 7, "name": "Betty", "address": "Green Grass 1"},
    {"_id": 8, "name": "Richard", "address": "Sky st 331"},
    {"_id": 9, "name": "Susan", "address": "One way 98"},
    {"_id": 10, "name": "Vicky", "address": "Yellow Garden 2"},
    {"_id": 11, "name": "Ben", "address": "Park Lane 38"},
    {"_id": 12, "name": "William", "address": "Central st 954"},
    {"_id": 13, "name": "Chuck", "address": "Main Road 989"},
    {"_id": 14, "name": "Viola", "address": "Sideway 1633"}
]

x = mycol.insert_many(mylist)

# find first results

x = mycol.find_one()

print(x)

# find all results

for x in mycol.find():
    print(x)

# can't have 1s and 0s in the print field except for the _id field. must either include or negate.

for x in mycol.find({}, {"_id": 0, "name": 1}):
    print(x)

for x in mycol.find({}, {"address": 0}):
    print(x)

# filtering results

myquery = {"address": "Park Lane 38"}

mydoc = mycol.find(myquery)

for x in mydoc:
    print(x)

# advanced query

myquery = {"address": {"$gt": "S"}}

mydoc = mycol.find(myquery)

for x in mydoc:
    print(x)

# query with regex

myquery = {"address": {"$regex": "^S"}}

mydoc = mycol.find(myquery)

for x in mydoc:
    print(x)

# sorting alphabetically

mydoc = mycol.find().sort("name")
for x in mydoc:
    print(x)

# sorting descending/ascending

mydoc = mycol.find().sort("name", -1)

for x in mydoc:
    print(x)

# updating one record

myquery = {"address": "Valley 345"}
newvalues = {"$set": {"address": "Canyon 123"}}

mycol.update_one(myquery, newvalues)
print("Updated list ...")
# print "customers" after the update:
for x in mycol.find():
    print(x)

# updating many records

myquery = {"address": {"$regex": "^S"}}
newvalues = {"$set": {"name": "Minnie"}}
print("Updating many records...")
x = mycol.update_many(myquery, newvalues)

print(x.modified_count, "documents updated.")

# deleting docs
myquery = {"address": "Mountain 21"}

mycol.delete_one(myquery)

myquery = {"address": "Mountain 21"}

mydoc = mycol.find(myquery)

for x in mydoc:
    print(x)

# delete many docs

mycol.delete_many(myquery)

myquery = {"address": "Mountain 21"}

mydoc = mycol.find(myquery)
print(f"Finding {myquery}")
for x in mydoc:
    print(x)

# deleting everything

x = mycol.delete_many({})

print(x.deleted_count, " documents deleted.")

x = mycol.find_one()

print(x)

# delete collection

mycol.drop()
collist = mydb.list_collection_names()
if "test_collection" in collist:
    print("The collection exists.")
else:
    print("test_collection does not exist.")
